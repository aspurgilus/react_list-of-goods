{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isGoodsVisible","isReversed","isSortedAlphabetically","isSortedByLength","setGoodsVisible","setState","reverseGoods","sortAlphabetically","sortByLength","reset","this","renderedGoods","sort","good1","good2","localeCompare","length","reverse","className","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAUIC,E,4MACJC,MAAQ,CACNC,gBAAgB,EAChBC,YAAY,EACZC,wBAAwB,EACxBC,kBAAkB,G,EAGpBC,gBAAkB,kBAAM,EAAKC,UAAS,SAAAN,GAAK,MAAK,CAC9CC,gBAAiBD,EAAMC,oB,EAGzBM,aAAe,kBAAM,EAAKD,UAAS,SAAAN,GAAK,MAAK,CAC3CE,YAAaF,EAAME,gB,EAGrBM,mBAAqB,kBAAM,EAAKF,SAAS,CACvCH,wBAAwB,EACxBC,kBAAkB,K,EAGpBK,aAAe,kBAAM,EAAKH,SAAS,CACjCF,kBAAkB,EAClBD,wBAAwB,K,EAG1BO,MAAQ,kBAAM,EAAKJ,SAAS,CAC1BH,wBAAwB,EACxBC,kBAAkB,K,4CAGpB,WACE,MAEIO,KAAKX,MADPC,EADF,EACEA,eAAgBC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,uBAAwBC,EADtD,EACsDA,iBAEhDQ,EAAa,UAAOd,GAc1B,OAZIK,GACFS,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAGvDX,GACFQ,EAAcC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMG,OAASF,EAAME,UAGxDf,GACFU,EAAcM,UAId,sBAAKC,UAAU,MAAf,UACE,uCACClB,EAEG,6BACGW,EAAcQ,KAAI,SAAAC,GAAI,OACrB,6BAAgBA,GAAPA,QAKb,wBACEC,KAAK,SACLC,QAASZ,KAAKN,gBAFhB,mBAQJ,wBACEiB,KAAK,SACLC,QAASZ,KAAKJ,aAFhB,qBAOA,wBACEe,KAAK,SACLC,QAASZ,KAAKH,mBAFhB,iCAOA,wBACEc,KAAK,SACLC,QAASZ,KAAKF,aAFhB,4BAOA,wBACEa,KAAK,SACLC,QAASZ,KAAKD,MAFhB,0B,GA1FUc,IAAMC,WAqGT1B,ICzHf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bc12095f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isGoodsVisible: boolean,\n  isReversed: boolean,\n  isSortedAlphabetically: boolean,\n  isSortedByLength: boolean\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isGoodsVisible: false,\n    isReversed: false,\n    isSortedAlphabetically: false,\n    isSortedByLength: false,\n  };\n\n  setGoodsVisible = () => this.setState(state => ({\n    isGoodsVisible: !state.isGoodsVisible,\n  }));\n\n  reverseGoods = () => this.setState(state => ({\n    isReversed: !state.isReversed,\n  }));\n\n  sortAlphabetically = () => this.setState({\n    isSortedAlphabetically: true,\n    isSortedByLength: false,\n  });\n\n  sortByLength = () => this.setState({\n    isSortedByLength: true,\n    isSortedAlphabetically: false,\n  });\n\n  reset = () => this.setState({\n    isSortedAlphabetically: false,\n    isSortedByLength: false,\n  });\n\n  render() {\n    const {\n      isGoodsVisible, isReversed, isSortedAlphabetically, isSortedByLength,\n    } = this.state;\n    const renderedGoods = [...goodsFromServer];\n\n    if (isSortedAlphabetically) {\n      renderedGoods.sort((good1, good2) => good1.localeCompare(good2));\n    }\n\n    if (isSortedByLength) {\n      renderedGoods.sort((good1, good2) => good1.length - good2.length);\n    }\n\n    if (isReversed) {\n      renderedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isGoodsVisible\n          ? (\n            <ul>\n              {renderedGoods.map(good => (\n                <li key={good}>{good}</li>\n              ))}\n            </ul>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.setGoodsVisible}\n            >\n              Start\n            </button>\n          )}\n\n        <button\n          type=\"button\"\n          onClick={this.reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.reset}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}