{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","isGoodsVisible","isReversed","sortBy","setGoodsVisible","setState","reverseGoods","sortAlphabetically","sortByLength","reset","sort","goods","good1","good2","localeCompare","length","this","renderedGoods","reverse","className","map","good","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"4OAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,gBAAgB,EAChBC,YAAY,EACZC,OAAQ,I,EAGVC,gBAAkB,kBAAM,EAAKC,SAAS,CACpCJ,gBAAgB,K,EAGlBK,aAAe,kBAAM,EAAKD,UAAS,SAAAL,GAAK,MAAK,CAC3CE,YAAaF,EAAME,gB,EAGrBK,mBAAqB,kBAAM,EAAKF,SAAS,CACvCF,OAAQ,U,EAGVK,aAAe,kBAAM,EAAKH,SAAS,CACjCF,OAAQ,Y,EAGVM,MAAQ,kBAAM,EAAKJ,SAAS,CAC1BF,OAAQ,GACRD,YAAY,K,EAGdQ,KAAO,SAACC,EAAiBR,GACvB,OAAOQ,EAAMD,MAAK,SAACE,EAAOC,GACxB,OAAQV,GACN,IAAK,OACH,OAAOS,EAAME,cAAcD,GAC7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,O,4CAKf,WACE,MAA+CC,KAAKhB,MAA5CC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,OAC9Bc,EAAa,UAAOnB,GAQ1B,OANAkB,KAAKN,KAAKO,EAAed,GAErBD,GACFe,EAAcC,UAId,sBAAKC,UAAU,MAAf,UACE,uCACClB,EAEG,qCACE,6BACGgB,EAAcG,KAAI,SAAAC,GAAI,OACrB,6BAAgBA,GAAPA,QAIb,wBACEC,KAAK,SACLC,QAASP,KAAKV,aAFhB,qBAOA,wBACEgB,KAAK,SACLC,QAASP,KAAKT,mBAFhB,iCAOA,wBACEe,KAAK,SACLC,QAASP,KAAKR,aAFhB,4BAOA,wBACEc,KAAK,SACLC,QAASP,KAAKP,MAFhB,sBASF,wBACEa,KAAK,SACLC,QAASP,KAAKZ,gBAFhB,0B,GA7FMoB,IAAMC,WAyGT1B,IC5Hf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.264a7555.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  isGoodsVisible: boolean,\n  isReversed: boolean,\n  sortBy: string\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    isGoodsVisible: false,\n    isReversed: false,\n    sortBy: '',\n  };\n\n  setGoodsVisible = () => this.setState({\n    isGoodsVisible: true,\n  });\n\n  reverseGoods = () => this.setState(state => ({\n    isReversed: !state.isReversed,\n  }));\n\n  sortAlphabetically = () => this.setState({\n    sortBy: 'name',\n  });\n\n  sortByLength = () => this.setState({\n    sortBy: 'length',\n  });\n\n  reset = () => this.setState({\n    sortBy: '',\n    isReversed: false,\n  });\n\n  sort = (goods: string[], sortBy: string) => {\n    return goods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'name':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  };\n\n  render() {\n    const { isGoodsVisible, isReversed, sortBy } = this.state;\n    const renderedGoods = [...goodsFromServer];\n\n    this.sort(renderedGoods, sortBy);\n\n    if (isReversed) {\n      renderedGoods.reverse();\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        {isGoodsVisible\n          ? (\n            <>\n              <ul>\n                {renderedGoods.map(good => (\n                  <li key={good}>{good}</li>\n                ))}\n              </ul>\n\n              <button\n                type=\"button\"\n                onClick={this.reverseGoods}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={this.setGoodsVisible}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}